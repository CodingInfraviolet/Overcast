#pragma once
namespace Enum
{
	enum LoadLocation { CPU = 2, GPU = 4 };

	//The connection between OpenGL and the values must be kept, unless changing rendering API.//


	enum Type { INT = GL_INT, UNSIGNED_INT = GL_UNSIGNED_INT, BYTE = GL_BYTE, 
		UNSIGNED_BYTE = GL_UNSIGNED_BYTE, FLOAT = GL_FLOAT, DOUBLE = GL_DOUBLE,
		ELEMENT_INDEX_TYPE = GL_UNSIGNED_INT};

	enum ImageFormat { RGB = GL_RGB, RGBA = GL_RGBA, DEPTH_COMPONENT = GL_DEPTH_COMPONENT, RED = GL_RED, BLUE=GL_BLUE, GREEN = GL_GREEN};
	enum InternalImageFormat {
		RGB32F = GL_RGB32F, DEPTH32F_STENCIL8 = GL_DEPTH32F_STENCIL8,
						DEPTH16 = GL_DEPTH_COMPONENT16, DEPTH24 = GL_DEPTH_COMPONENT24,
						DEPTH32 = GL_DEPTH_COMPONENT32,_IIFUndefined = 0, R8 = GL_R8 };

	enum Usage { STREAM_DRAW = GL_STREAM_DRAW, STREAM_READ = GL_STREAM_READ,
		STREAM_COPY = GL_STREAM_COPY, STATIC_DRAW = GL_STATIC_DRAW,
		STATIC_READ = GL_STATIC_READ, STATIC_COPY = GL_STATIC_COPY,
		DYNAMIC_DRAW = GL_DYNAMIC_DRAW, DYNAMIC_READ = GL_DYNAMIC_READ,
		DYNAMIC_COPY = GL_DYNAMIC_COPY };

	enum LightType { LIGHT_BASE, LIGHT_DIRECTIONAL, LIGHT_POINT };
}